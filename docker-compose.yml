services:
  model-service:
    image: ${MODEL_IMAGE}
    container_name: model-service
    expose:
      - ${MODEL_PORT}
    environment:
      - FLASK_ENV=production
      - RESOURCE_BASE_URL=${RESOURCE_URL}
      - MODEL=${MODEL_FILENAME}
      - CV=${CLASSIFIER_FILENAME}
      - PORT=${MODEL_PORT}
      - MODEL_VERSION=${MODEL_VERSION}
    volumes:
      - model-cache:/models
    restart: unless-stopped
    networks:
      - remla-net
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:${MODEL_PORT}"]
    #   interval: 1m
    #   timeout: 10s
    #   retries: 3
    #   start_period: 30s

  app-service:
    image: ${APP_IMAGE}
    container_name: app-service
    expose:
      - ${APP_PORT}
    environment:
      - FLASK_ENV=production
      - APP_NAME=app-service
      - PORT=${APP_PORT}
      - HOST=0.0.0.0
      - MODEL_SERVICE_URL="http://model-service:${MODEL_PORT}"
    secrets:
      - test_secret
    restart: unless-stopped
    networks:
      - remla-net
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}/health"]
    #   interval: 1m
    #   timeout: 10s
    #   retries: 3
    #   start_period: 30s

  app-frontend:
    image: ${FRONTEND_IMAGE}
    container_name: app-frontend
    expose:
      - ${FRONTEND_PORT}
    environment:
      - FLASK_ENV=production
      - APP_SERVICE_URL="http://app-service:${APP_PORT}"
      - PORT=${FRONTEND_PORT}
    restart: unless-stopped
    networks:
      - remla-net
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:${FRONTEND_PORT}"]
    #   interval: 1m
    #   timeout: 10s
    #   retries: 3
    #   start_period: 30s

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app-service
      - model-service
      - app-frontend
      # app-service:
      #   condition: service_healthy
      # model-service:
      #   condition: service_healthy
      # app-frontend:
      #   condition: service_healthy
    restart: unless-stopped
    networks:
      - remla-net

volumes:
  model-cache:
    driver: local

networks:
  remla-net:
    name: remla-net

secrets:
  test_secret:
    file: ".secrets/test_secret.txt"
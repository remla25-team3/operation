---
- hosts: all
  gather_facts: no

  tasks:
    - name: Deploy Istio global rate-limiting components
      kubernetes.core.k8s:
        state: present
        definition: |
          # 1) Redis backing store
          apiVersion: v1
          kind: Service
          metadata:
            name: redis
            namespace: istio-system
            labels:
              app: redis
          spec:
            ports:
              - name: redis
                port: 6379
                protocol: TCP
            selector:
              app: redis
          ---
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: redis
            namespace: istio-system
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: redis
            template:
              metadata:
                labels:
                  app: redis
              spec:
                containers:
                  - name: redis
                    image: redis:alpine
                    ports:
                      - containerPort: 6379

          # 2) RateLimit ConfigMap (per-IP @ 10 req/min)
          ---
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: ratelimit-config
            namespace: istio-system
          data:
            config.yaml: |
              domain: ratelimit
              descriptors:
                - key: remote_address
                  rate_limit:
                    unit: minute
                    requests_per_unit: 10

          # 3) Ratelimit Service & Deployment
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: ratelimit
            namespace: istio-system
          spec:
            ports:
              - name: grpc
                port: 8081
                targetPort: 8081
            selector:
              app: ratelimit
          ---
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: ratelimit
            namespace: istio-system
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: ratelimit
            template:
              metadata:
                labels:
                  app: ratelimit
              spec:
                containers:
                  - name: ratelimit
                    image: envoyproxy/ratelimit:bb4dae24
                    command: ["/bin/ratelimit"]
                    args:
                      - "--config-path=/data/ratelimit/config.yaml"
                    env:
                      - name: REDIS_SOCKET_TYPE
                        value: tcp
                      - name: REDIS_URL
                        value: redis:6379
                      - name: LOG_LEVEL
                        value: info
                    ports:
                      - containerPort: 8081
                    volumeMounts:
                      - name: config
                        mountPath: /data/ratelimit
                volumes:
                  - name: config  
                    configMap:
                      name: ratelimit-config

          # 4) EnvoyFilter to inject global rate-limit into the IngressGateway
          ---
          apiVersion: networking.istio.io/v1alpha3
          kind: EnvoyFilter
          metadata:
            name: ingress-global-ratelimit
            namespace: istio-system
          spec:
            workloadSelector:
              labels:
                app: istio-ingress
            configPatches:
              # Insert the rate-limit filter before the router filter
              - applyTo: HTTP_FILTER
                match:
                  context: GATEWAY
                  listener:
                    filterChain:
                      filter:
                        name: envoy.filters.network.http_connection_manager
                        subFilter:
                          name: envoy.filters.http.router
                patch:
                  operation: INSERT_BEFORE
                  value:
                    name: envoy.filters.http.ratelimit
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                      domain: ratelimit
                      failure_mode_deny: true
                      timeout: 10s
                      rate_limit_service:
                        grpc_service:
                          envoy_grpc:
                            cluster_name: outbound|8081||ratelimit.istio-system.svc.cluster.local
                            authority: ratelimit.istio-system.svc.cluster.local
                        transport_api_version: V3

              # Apply per-IP rate-limit to every virtual host
              - applyTo: VIRTUAL_HOST
                match:
                  context: GATEWAY
                  routeConfiguration:
                    vhost:
                      name: "*"
                      route:
                        action: ANY
                patch:
                  operation: MERGE
                  value:
                    rate_limits:
                      - actions:
                          - remote_address: {}
